{
  "enabled": true,
  "name": "Code Quality Analyzer",
<<<<<<< HEAD
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Provides suggestions for improving readability, maintainability, and performance while maintaining existing functionality.",
=======
  "description": "Monitors source code files for changes and provides comprehensive code quality analysis including code smells, design patterns, best practices, and automatically fixes test and lint errors while maintaining functionality.",
>>>>>>> 490e7fc (Enhance frontend and fix all other errors)
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
<<<<<<< HEAD
      "*.jsx"
=======
      "*.jsx",
      "eslint.config.js",
      "tsconfig*.json",
      "vite.config.ts",
      "vitest.config.ts"
>>>>>>> 490e7fc (Enhance frontend and fix all other errors)
    ]
  },
  "then": {
    "type": "askAgent",
<<<<<<< HEAD
    "prompt": "Analyze the recently modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to React, TypeScript, and general programming best practices\n4. **Performance**: Look for potential performance optimizations without changing functionality\n5. **Readability**: Suggest improvements for code clarity and maintainability\n6. **Type Safety**: Ensure proper TypeScript usage and type definitions\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code example showing the improvement\n- Reasoning for why the change would be beneficial\n- Impact on maintainability, performance, or readability\n\nConsider the project context: React 19 + TypeScript + Vite + Tailwind CSS + Supabase stack for a project management platform."
=======
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Quality Issues**: Identify code smells, anti-patterns, and violations of best practices\n2. **Design Patterns**: Suggest appropriate design patterns where beneficial\n3. **TypeScript Best Practices**: Ensure strict typing, proper interfaces, and type safety\n4. **React Best Practices**: Check for proper hook usage, component patterns, and performance optimizations\n5. **Test Coverage**: Identify missing tests and fix any test errors\n6. **Lint Errors**: Fix all ESLint violations and warnings\n7. **Performance**: Suggest optimizations for rendering, memory usage, and bundle size\n8. **Maintainability**: Improve code readability, documentation, and structure\n9. **Security**: Check for potential security vulnerabilities\n10. **Accessibility**: Ensure WCAG compliance and proper ARIA usage\n\nFor each issue found:\n- Explain the problem clearly\n- Provide the improved code solution\n- Explain why the change improves the codebase\n- Ensure the fix maintains existing functionality\n\nRun `npm run lint` and `npm test` to verify all errors are resolved. Prioritize fixes that improve code quality while preserving the existing behavior and user experience."
>>>>>>> 490e7fc (Enhance frontend and fix all other errors)
  }
}